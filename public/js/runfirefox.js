(function(){function getState(el){var selected=xtag.query(el,"x-slides > x-slide[selected]")[0]||0;return[selected?xtag.query(el,"x-slides > x-slide").indexOf(selected):selected,el.firstElementChild.children.length-1]}function slide(el,index){var slides=xtag.toArray(el.firstElementChild.children);slides.forEach(function(slide){slide.removeAttribute("selected")}),slides[index||0].setAttribute("selected",null),el.firstElementChild.style[transform]="translate"+(el.getAttribute("orientation")||"x")+"("+(index||0)*(-100/slides.length)+"%)"}function init(toSelected){var slides=this.firstElementChild;if(slides&&slides.children.length&&slides.tagName.toLowerCase()=="x-slides"){var children=xtag.toArray(slides.children),size=100/(children.length||1),orient=this.getAttribute("orientation")||"x",style="x"==orient?["width","height"]:["height","width"];if(slides.style[style[1]]="100%",slides.style[style[0]]=children.length*100+"%",slides.style[transform]="translate"+orient+"(0%)",children.forEach(function(slide){slide.style[style[0]]=size+"%",slide.style[style[1]]="100%"}),toSelected){var selected=slides.querySelector("[selected]");selected&&slide(this,children.indexOf(selected)||0)}}}var transform=xtag.prefix.js+"Transform";xtag.register("x-slidebox",{events:{transitionend:function(e){e.target==this&&xtag.fireEvent(this,"slideend")},elementupgrade:function(e){e.target==this&&init()}},accessors:{orientation:{get:function(){return this.getAttribute("orientation")},set:function(value){this.setAttribute("orientation",value.toLowerCase()),init.call(this,!0)}}},methods:{slideTo:function(index){slide(this,index)},slideNext:function(){var shift=getState(this);shift[0]++,slide(this,shift[0]>shift[1]?0:shift[0])},slidePrevious:function(){var shift=getState(this);shift[0]--,slide(this,shift[0]<0?shift[1]:shift[0])}}}),xtag.register("x-slide",{lifecycle:{inserted:function(){var ancestor=this.parentNode.parentNode;ancestor.tagName.toLowerCase()=="x-slidebox"&&init.call(ancestor,!0)}},events:{elementupgrade:function(e){if(e.target==this){var ancestor=this.parentNode.parentNode;ancestor.tagName.toLowerCase()=="x-slidebox"&&init.call(ancestor,!0)}}}})})(),(document.register||{}).__polyfill__||function(){function typeOf(obj){return{}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase()}function clone(item,type){var fn=clone[type||typeOf(item)];return fn?fn(item):item}function toArray(obj){return unsliceable.indexOf(typeof obj)==-1?Array.prototype.slice.call(obj,0):[obj]}function query(element,selector){return element&&selector&&selector.length?toArray(element.querySelectorAll(selector)):[]}function getTag(element){return element.nodeName?tags[element.nodeName.toLowerCase()]:!1}function manipulate(element,fn){var next=element.nextSibling,parent=element.parentNode,frag=doc.createDocumentFragment(),returned=fn.call(frag.appendChild(element),frag)||element;next?parent.insertBefore(returned,next):parent.appendChild(returned)}function upgrade(element,replace){if(!element._elementupgraded&&!element._suppressObservers){var tag=getTag(element);if(tag){var upgraded=element;replace&&(element._suppressObservers=!0,manipulate(element,function(){for(upgraded=_createElement.call(doc,element.nodeName),upgraded._suppressObservers=!0;element.firstChild;)upgraded.appendChild(element.firstChild);for(var index=element.attributes.length;index--;){var attr=element.attributes[index];upgraded.setAttribute(attr.name,attr.value)}return upgraded})),upgraded.__proto__=tag.prototype,upgraded._elementupgraded=!0,mutation||delete upgraded._suppressObservers,tag.lifecycle.created.call(upgraded,tag.prototype),replace&&fireEvent(element,"elementreplace",{upgrade:upgraded},{bubbles:!1}),fireEvent(upgraded,"elementupgrade")}}}function inserted(element){var tag=getTag(element);if(tag)if(element._elementupgraded){if(element._suppressObservers)return delete element._suppressObservers,element;!element._suppressObservers&&doc.documentElement.contains(element)&&tag.lifecycle.inserted.call(element),insertChildren(element)}else upgrade(element,!0);else insertChildren(element)}function insertChildren(element){element.childNodes.length&&query(element,tokens).forEach(function(el){el._elementupgraded||upgrade(el,!0),getTag(el).lifecycle.inserted.call(el)})}function removed(element){element._elementupgraded&&(element._suppressObservers?delete element._suppressObservers:(getTag(element).lifecycle.removed.call(element),element.childNodes.length&&query(element,tokens).forEach(function(el){removed(el)})))}function addObserver(element,type,fn){element._records||(element._records={inserted:[],removed:[]},mutation?(element._observer=new mutation(function(mutations){parseMutations(element,mutations)}),element._observer.observe(element,{subtree:!0,childList:!0,attributes:!1,characterData:!1})):["Inserted","Removed"].forEach(function(type){element.addEventListener("DOMNode"+type,function(event){event._mutation=!0,element._records[type.toLowerCase()].forEach(function(fn){fn(event.target,event)})},!1)})),element._records[type].indexOf(fn)==-1&&element._records[type].push(fn)}function removeObserver(element,type,fn){var obj=element._records;obj&&fn?obj[type].splice(obj[type].indexOf(fn),1):obj[type]=[]}function parseMutations(element,mutations){var diff={added:[],removed:[]};mutations.forEach(function(record){record._mutation=!0;for(var z in diff){var type=element._records["added"==z?"inserted":"removed"],nodes=record[z+"Nodes"],length=nodes.length;for(i=0;length>i&&diff[z].indexOf(nodes[i])==-1;i++)diff[z].push(nodes[i]),type.forEach(function(fn){fn(nodes[i],record)})}})}function fireEvent(element,type,data,options){options=options||{};var event=doc.createEvent("Event");event.initEvent(type,"bubbles"in options?options.bubbles:!0,"cancelable"in options?options.cancelable:!0);for(var z in data)event[z]=data[z];element.dispatchEvent(event)}var win=window,doc=document,tags={},tokens=[],domready=!1,mutation=win.MutationObserver||win.WebKitMutationObserver||win.MozMutationObserver,_createElement=doc.createElement,register=function(name,options){if(tags[name]||tokens.push(name),options=options||{},options.prototype&&!("setAttribute"in options.prototype))throw new TypeError("Unexpected prototype for "+name+" element - custom element prototypes must inherit from the Element interface");var lifecycle=options.lifecycle||{},tag=tags[name]={prototype:options.prototype||Object.create((win.HTMLSpanElement||win.HTMLElement).prototype),fragment:options.fragment||document.createDocumentFragment(),lifecycle:{created:lifecycle.created||function(){},removed:lifecycle.removed||function(){},inserted:lifecycle.inserted||function(){},attributeChanged:lifecycle.attributeChanged||function(){}}};return domready&&query(doc,name).forEach(function(element){upgrade(element,!0)}),tag.prototype};clone.object=function(src){var obj={};for(var key in src)obj[key]=clone(src[key]);return obj},clone.array=function(src){for(var i=src.length,array=new Array(i);i--;)array[i]=clone(src[i]);return array};var unsliceable=["number","boolean","string","function"],polyfill=!doc.register;if(polyfill){doc.register=register,doc.createElement=function(tag){var element=_createElement.call(doc,tag);return upgrade(element),element};var _setAttribute=Element.prototype.setAttribute;Element.prototype.setAttribute=function(attr,value){var tag=getTag(this),last=this.getAttribute(attr);_setAttribute.call(this,attr,value),tag&&last!=this.getAttribute(attr)&&tag.lifecycle.attributeChanged.call(this,attr,value,last)};var initialize=function(){addObserver(doc.documentElement,"inserted",inserted),addObserver(doc.documentElement,"removed",removed),tokens.length&&query(doc,tokens).forEach(function(element){upgrade(element,!0)}),domready=!0,fireEvent(doc,"DOMComponentsLoaded"),fireEvent(doc,"__DOMComponentsLoaded__")};doc.readyState=="complete"?initialize():doc.addEventListener(doc.readyState=="interactive"?"readystatechange":"DOMContentLoaded",initialize)}doc.register.__polyfill__={query:query,clone:clone,typeOf:typeOf,toArray:toArray,fireEvent:fireEvent,manipulate:manipulate,addObserver:addObserver,removeObserver:removeObserver,observerElement:doc.documentElement,parseMutations:parseMutations,_inserted:inserted,_createElement:_createElement,_polyfilled:polyfill}}(),function(){function mergeOne(source,key,current){var type=xtag.typeOf(current);return"object"==type&&xtag.typeOf(source[key])=="object"?xtag.merge(source[key],current):source[key]=xtag.clone(current,type),source}function mergeMixin(type,mixin,option){var original={};for(var o in option)original[o.split(":")[0]]=!0;for(var x in mixin)original[x.split(":")[0]]||(option[x]=mixin[x])}function applyMixins(tag){return tag.mixins.forEach(function(name){var mixin=xtag.mixins[name];for(var type in mixin)switch(type){case"lifecycle":case"methods":mergeMixin(type,mixin[type],tag[type]);break;case"accessors":case"prototype":for(var z in mixin[type])mergeMixin(z,mixin[type],tag.accessors);break;case"events":}}),tag}var win=window,doc=document,keypseudo={action:function(pseudo,event){return~pseudo.value.match(/(\d+)/g).indexOf(String(event.keyCode))==(pseudo.name=="keypass")}},touchFilter=function(custom,event){return custom.listener.touched?custom.listener.touched=!1:(event.type.match("touch")&&(custom.listener.touched=!0),void 0)},createFlowEvent=function(type){var flow="over"==type;return{base:"OverflowEvent"in window?"overflowchanged":type+"flow",condition:function(custom,event){return event.type==type+"flow"||event.orient===0&&event.horizontalOverflow==flow||event.orient==1&&event.verticalOverflow==flow||event.orient==2&&event.horizontalOverflow==flow&&event.verticalOverflow==flow}}},prefix=function(){var styles=win.getComputedStyle(doc.documentElement,""),pre=(Array.prototype.slice.call(styles).join("").match(/-(moz|webkit|ms)-/)||styles.OLink===""&&["","o"])[1],dom="WebKit|Moz|MS|O".match(new RegExp("("+pre+")","i"))[1];return{dom:dom,lowercase:pre,css:"-"+pre+"-",js:pre[0].toUpperCase()+pre.substr(1)}}(),matchSelector=Element.prototype.matchesSelector||Element.prototype[prefix.lowercase+"MatchesSelector"],xtag={defaultOptions:{mixins:[],events:{},methods:{},accessors:{},lifecycle:{},prototype:{xtag:{get:function(){return this.__xtag__?this.__xtag__:this.__xtag__={data:{}}},set:function(){}}}},register:function(name,options){var tag=xtag.merge({},xtag.defaultOptions,options);tag=applyMixins(tag);for(var z in tag.events)tag.events[z.split(":")[0]]=xtag.parseEvent(z,tag.events[z]);for(z in tag.lifecycle)tag.lifecycle[z.split(":")[0]]=xtag.applyPseudos(z,tag.lifecycle[z]);for(z in tag.methods)tag.prototype[z.split(":")[0]]={value:xtag.applyPseudos(z,tag.methods[z])};for(var prop in tag.accessors){tag.prototype[prop]={};var accessor=tag.accessors[prop];for(z in accessor){var key=z.split(":"),type=key[0];"get"==type||"set"==type?(key[0]=prop,tag.prototype[prop][type]=xtag.applyPseudos(key.join(":"),accessor[z])):tag.prototype[prop][z]=accessor[z]}}var created=tag.lifecycle.created;tag.lifecycle.created=function(){return xtag.addEvents(this,tag.events),tag.mixins.forEach(function(mixin){xtag.mixins[mixin].events&&xtag.addEvents(this,xtag.mixins[mixin].events)},this),created?created.apply(this,xtag.toArray(arguments)):null};var proto=doc.register(name,{prototype:"nodeName"in tag.prototype?tag.prototype:Object.create((win.HTMLSpanElement||win.HTMLElement).prototype,tag.prototype),lifecycle:tag.lifecycle});return proto},mixins:{},prefix:prefix,captureEvents:["focus","blur"],customEvents:{overflow:createFlowEvent("over"),underflow:createFlowEvent("under"),animationstart:{base:["animationstart","oAnimationStart","MSAnimationStart","webkitAnimationStart"]},transitionend:{base:["transitionend","oTransitionEnd","MSTransitionEnd","webkitTransitionEnd"]},tap:{base:["click","touchend"],condition:touchFilter},tapstart:{base:["mousedown","touchstart"],condition:touchFilter},tapend:{base:["mouseup","touchend"],condition:touchFilter},tapenter:{base:["mouseover","touchenter"],condition:touchFilter},tapleave:{base:["mouseout","touchleave"],condition:touchFilter},tapmove:{base:["mousemove","touchmove"],condition:touchFilter}},pseudos:{keypass:keypseudo,keyfail:keypseudo,delegate:{action:function(pseudo,event){var target=xtag.query(this,pseudo.value).filter(function(node){return node==event.target||node.contains?node.contains(event.target):!1})[0];return target?pseudo.listener=pseudo.listener.bind(target):!1}},preventable:{action:function(pseudo,event){return!event.defaultPrevented}},attribute:{action:function(pseudo,value){this.setAttribute(pseudo.value||pseudo.key.split(":")[0],value,!0)}}},wrap:function(original,fn){return function(){var args=xtag.toArray(arguments),returned=original.apply(this,args);return returned===!1?!1:fn.apply(this,"undefined"!=typeof returned?xtag.toArray(returned):args)}},merge:function(source,k,v){if(xtag.typeOf(k)=="string")return mergeOne(source,k,v);for(var i=1,l=arguments.length;l>i;i++){var object=arguments[i];for(var key in object)mergeOne(source,key,object[key])}return source},skipTransition:function(element,fn,bind){var duration=prefix.js+"TransitionDuration";element.style[duration]="0.001s",fn.call(bind),xtag.addEvent(element,"transitionend",function(){element.style[duration]=""})},matchSelector:function(element,selector){return matchSelector.call(element,selector)},innerHTML:function(element,html){element.innerHTML=html,xtag._polyfilled&&(xtag.observerElement._observer?xtag.parseMutations(xtag.observerElement,xtag.observerElement._observer.takeRecords()):xtag._inserted(element))},hasClass:function(element,klass){return element.className.split(" ").indexOf(klass.trim())>-1},addClass:function(element,klass){var list=element.className.trim().split(" ");return klass.trim().split(" ").forEach(function(name){~list.indexOf(name)||list.push(name)}),element.className=list.join(" ").trim(),element},removeClass:function(element,klass){var classes=klass.trim().split(" ");return element.className=element.className.trim().split(" ").filter(function(name){return name&&!~classes.indexOf(name)}).join(" "),element},toggleClass:function(element,klass){return xtag[xtag.hasClass(element,klass)?"removeClass":"addClass"].call(null,element,klass)},query:function(element,selector){return xtag.toArray(element.querySelectorAll(selector))},queryChildren:function(element,selector){var id=element.id,guid=element.id=id||"x_"+(new Date).getTime(),attr="#"+guid+" > ";selector=attr+(selector+"").replace(",",","+attr,"g");var result=element.parentNode.querySelectorAll(selector);return id||(element.id=null),xtag.toArray(result)},createFragment:function(content){var frag=doc.createDocumentFragment();if(content){for(var div=frag.appendChild(doc.createElement("div")),nodes=xtag.toArray(content.nodeName?arguments:!(div.innerHTML=content)||div.children),index=nodes.length;index--;)frag.insertBefore(nodes[index],div);frag.removeChild(div)}return frag},applyPseudos:function(key,fn){var listener=fn;if(key.match(":"))for(var split=key.match(/(\w+(?:\([^\)]+\))?)/g),i=split.length;--i;)split[i].replace(/(\w*)(?:\(([^\)]*)\))?/,function(match,name,value){var pseudo=xtag.pseudos[name];if(!pseudo)throw"pseudo not found: "+name;var last=listener;listener=function(){var args=xtag.toArray(arguments),obj={key:key,name:name,value:value,listener:last};return pseudo.action.apply(this,[obj].concat(args))===!1?!1:obj.listener.apply(this,args)}});return listener},parseEvent:function(type,fn){var pseudos=type.split(":"),key=pseudos.shift(),event=xtag.merge({base:key,pseudos:"",onAdd:function(){},onRemove:function(){},condition:function(){}},xtag.customEvents[key]||{});if(event.type=key+(event.pseudos.length?":"+event.pseudos:"")+(pseudos.length?":"+pseudos.join(":"):""),fn){var chained=xtag.applyPseudos(event.type,fn);event.listener=function(){var args=xtag.toArray(arguments);return event.condition.apply(this,[event].concat(args))===!1?!1:chained.apply(this,args)}}return event},addEvent:function(element,type,fn){var event="function"==typeof fn?xtag.parseEvent(type,fn):fn;return event.onAdd.call(element,event,event.listener),xtag.toArray(event.base).forEach(function(name){element.addEventListener(name,event.listener,xtag.captureEvents.indexOf(name)>-1)}),event.listener},addEvents:function(element,events){for(var z in events)xtag.addEvent(element,z,events[z])},removeEvent:function(element,type,fn){var event=xtag.parseEvent(type);event.onRemove.call(element,event,fn),xtag.removePseudos(element,event.type,fn),xtag.toArray(event.base).forEach(function(name){element.removeEventListener(name,fn)})}};xtag.typeOf=doc.register.__polyfill__.typeOf,xtag.clone=doc.register.__polyfill__.clone,xtag.merge(xtag,doc.register.__polyfill__),"function"==typeof define&&define.amd?define(xtag):win.xtag=xtag}();